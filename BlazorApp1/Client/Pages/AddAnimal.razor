@page "/animal/add"
@page "/animal/edit/{animalId:int}"
@using BlazorApp1.Shared.Model
@inject HttpClient Http
@inject NavigationManager NavigationManager
<h1>@Title Animals</h1>
<hr />
<EditForm Model="@animal" OnValidSubmit="SaveAnimal">
    <DataAnnotationsValidator />


    <div class="mb-3">
        <label for="Name" class="form-label">Name</label>
        <div class="col-md-4">
            <InputText class="form-control" @bind-Value="animal.name" />
        </div>
        <ValidationMessage For="@(() => animal.name)" />
    </div>
    <div class="mb-3">
        <label for="Breed" class="form-label">Breed</label>
        <div class="col-md-4">
            <InputText class="form-control" @bind-Value="animal.breed" />
        </div>
        <ValidationMessage For="@(() => animal.breed)" />
    </div>

    <div class="mb-3">
        <label for="Breed" class="form-label">Birth Date</label>
        <div class="col-md-4">
            <InputText class="form-control" @bind-Value="animal.birthDate" placeholder="YYYY-MM-DD"/>
        </div>
        
        <ValidationMessage For="@(() => animal.birthDate)" />
    </div>


    <div class="mb-3">
        <label for="Price" class="form-label">Price</label>
        <div class="col-md-4">
            <InputText class="form-control" @bind-Value="animal.price" />
        </div>
        <ValidationMessage For="@(() => animal.price)" />
    </div>

    <div class="mb-3">
        <label for="Price" class="form-label">Status</label>
        <div class="col-md-4">
            <InputText class="form-control" @bind-Value="animal.status" />
        </div>
        <ValidationMessage For="@(() => animal.status)" />
    </div>

    <div class="form-group">
        <button type="submit" class="btn btn-primary">Save</button>
        <button class="btn btn-light" @onclick="Cancel">Cancel</button>
    </div>
</EditForm>
@code {
    [Parameter]
    public int animalId { get; set; }
    protected string Title = "Add";
    protected Animal animal = new();
    protected override async Task OnParametersSetAsync()
    {
        if (animalId != 0)
        {
            Title = "Edit";
            animal = await Http.GetFromJsonAsync<Animal>("api/Animal/" + animalId);
        }
    }
    protected async Task SaveAnimal()
    {
        if (animal.animalId!=0)
        {
            await Http.PutAsJsonAsync("api/Animal", animal);
        }
        else
        {
            await Http.PostAsJsonAsync("api/Animal", animal);
        }
        Cancel();
    }
    public void Cancel()
    {
        NavigationManager.NavigateTo("/animaldetails");
    }
}